{"version":3,"sources":["helpers/stickers.js","helpers/piecesLogic.js","components/CommsConfig.js","components/CommsPractice.js","components/TargetsSelection.js","components/CommsTrainer.js","components/Config.js","components/CubeLayout.js","components/Home.js","components/Sidebar.js","components/Test.js","components/Train.js","routers/AppRouter.js","App.js","index.js"],"names":["stickers","notSamePiece","sticker1","sticker2","split","sort","join","getTargets","pieceType","letterScheme","JSON","parse","localStorage","getItem","stickerCount","filter","sticker","length","firstEl","secondEl","localeCompare","translatePair","pair","concat","CommsConfig","comms","targets","useState","firstTarget","setFirstTarget","secondTargets","secondTarget","showSuccess","setShowSuccess","isMounted","setIsMounted","useEffect","className","toUpperCase","substring","role","to","style","display","float","onClick","columnCount","map","htmlFor","type","id","defaultValue","forEach","commField","document","getElementById","value","setItem","stringify","setTimeout","target","CommsPractice","practiceTargets","commPos","setCommPos","nextComm","Math","min","useKeypress","max","onTouchStart","width","height","borderRadius","fontSize","padding","textAlign","title","random","autoFocus","TargetsSelection","setPracticeTargets","marginLeft","allCheckbox","checked","pairs","target1","target2","push","generatePairs","CommsTrainer","Config","CubeLayout","disabled","maxLength","placeholder","name","defaultChecked","edgeBuffer","cornerBuffer","errors","getElementsByName","stickerRadio","allAsigned","asignedEdges","asignedCorners","repeatedEdgeError","repeatedCornerError","reapetedEdgeLetters","reapetedCornerLetters","stickerField","includes","alert","Home","Sidebar","exact","Test","position","top","left","Train","AppRouter","path","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.391f329c.chunk.js","sourcesContent":["export const stickers = ['UBL','UB','UBR','UL','U','UR','UFL','UF','UFR','LUB','LU','LUF','FUL','FU','FUR','RUF','RU','RUB','BUR','BU','BUL','LB','L','LF','FL','F','FR','RF','R','RB','BR','B','BL','LDB','LD','LDF','FDL','FD','FDR','RDF','RD','RDB','BDR','BD','BDL','DFL','DF','DFR','DL','D','DR','DBL','DB','DBR'];","import { stickers } from '../helpers/stickers';\r\n\r\nexport const notSamePiece = (sticker1, sticker2) => {\r\n    return sticker1.split('').sort().join('') !== sticker2.split('').sort().join('');\r\n}\r\n\r\n/*export const notSamePieceByLetter = (sticker1, sticker2, type) => {\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    //console.log(sticker1, Object.keys(letterScheme).find(key => letterScheme[key] === sticker1), sticker2, Object.keys(letterScheme).find(key => letterScheme[key] === sticker2), notSamePieceByName(Object.keys(letterScheme).find(key => letterScheme[key] === sticker1), Object.keys(letterScheme).find(key => letterScheme[key] === sticker2)));\r\n    return notSamePieceByName(\r\n        Object.keys(letterScheme).filter(key => key.length === type).find(key => letterScheme[key] === sticker1),\r\n        Object.keys(letterScheme).filter(key => key.length === type).find(key => letterScheme[key] === sticker2)\r\n        );\r\n}*/\r\n\r\nexport const getTargets = (pieceType) => {\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n\r\n    if (!letterScheme) {\r\n        return false;\r\n    }\r\n\r\n    let stickerCount = 0;\r\n    if (pieceType === 'edge') {\r\n        stickerCount = 2;\r\n    } else if (pieceType === 'corner') {\r\n        stickerCount = 3;\r\n    }\r\n    \r\n    return stickers.filter(sticker => (sticker.length === stickerCount && notSamePiece(sticker, letterScheme[`${pieceType}Buffer`]))).sort((firstEl, secondEl) => (letterScheme[firstEl].localeCompare(letterScheme[secondEl])));\r\n}\r\n\r\n\r\nexport const generatePairs = (targets) => {\r\n    //console.log(\"generating pairs\");\r\n    let pairs = [];\r\n    targets.forEach(target1 => {\r\n        targets.forEach(target2 => {\r\n            if (notSamePiece(target1, target2)) {\r\n                //console.log(target1.concat(target2), pairs.includes(target1.concat(target2)));\r\n                if ((document.getElementById(\"starting\").checked && document.getElementById(target1).checked) || (document.getElementById(\"ending\").checked && document.getElementById(target2).checked)) {\r\n                    pairs.push([target1, target2]);\r\n                }\r\n            }\r\n        });\r\n    });\r\n    //console.log(pairs);\r\n    return pairs.sort(() => (Math.random() - 0.5));\r\n}\r\n\r\nexport const translatePair = (pair) => {\r\n    // Translate from [XYZ, XYZ] to 'AB'\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    return letterScheme[pair[0]].concat(letterScheme[pair[1]]);\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTargets, notSamePiece, translatePair } from '../helpers/piecesLogic';\r\n\r\nexport const CommsConfig = ({pieceType}) => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    let comms = JSON.parse(localStorage.getItem(\"comms\"))||{};\r\n\r\n    const targets = getTargets(pieceType);\r\n    const [firstTarget, setFirstTarget] = useState('');\r\n    const secondTargets = targets.filter(secondTarget => (notSamePiece(firstTarget, secondTarget)));\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [isMounted, setIsMounted] = useState(true);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsMounted(false);\r\n        }\r\n    }, [])\r\n\r\n    if (!targets) {\r\n        return (\r\n            <>\r\n                <h1 className='m-4'>\r\n                    {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n                </h1>\r\n                <div className=\"alert alert-warning alert-dismissible m-2\" role=\"alert\">\r\n                    Looks like you don't have a letter scheme, do you want to <Link to=\"/config\">make one</Link>?\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const back = () => {\r\n        setFirstTarget(\"\");\r\n    }\r\n\r\n    const save = () => {\r\n        secondTargets.forEach(secondTarget => {\r\n            const commField = document.getElementById(secondTarget);\r\n            if (commField.value) {\r\n                comms[`${firstTarget}-${secondTarget}`] = commField.value;\r\n            }\r\n        });\r\n        \r\n        localStorage.setItem('comms',JSON.stringify(comms));\r\n        setShowSuccess(true);\r\n        setTimeout(() => {\r\n            if (isMounted) {\r\n                setShowSuccess(false)\r\n            }\r\n        }, 3500);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n            </h1>\r\n\r\n            {firstTarget?<>\r\n                <button className=\"btn btn-primary\" style={{float: 'right'}} onClick={back}>\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n                <div style={{columnCount: 2}}>\r\n                    {secondTargets.map(secondTarget => (\r\n                        <div key={secondTarget} className='mx-3 row'>\r\n                            <label htmlFor={secondTarget} className='col-1 col-form-label'>\r\n                                {translatePair([firstTarget, secondTarget])}:\r\n                            </label>\r\n                            <div className='col-11'>\r\n                                <input\r\n                                    type = \"text\"\r\n                                    className = 'form-control'\r\n                                    key = {secondTarget}\r\n                                    id = {secondTarget}\r\n                                    defaultValue = {comms[`${firstTarget}-${secondTarget}`]}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button className='btn btn-primary btn-lg mt-3' onClick={save}>\r\n                    Save\r\n                </button>\r\n                {showSuccess && \r\n                    <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                        Comms saved.\r\n                    </div>\r\n                }\r\n            </>:<>\r\n                <Link to=\"/config\">\r\n                    <button className=\"btn btn-primary\" style={{float: 'right'}}>\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n                <br/>\r\n                {targets.map(target => (\r\n                    <button key={target} className='btn btn-primary btn-lg m-2' onClick={() => {setFirstTarget(target);}}>\r\n                        {letterScheme[target]}\r\n                    </button>\r\n                ))}\r\n            </>}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport useKeypress from 'react-use-keypress';\r\nimport { translatePair } from '../helpers/piecesLogic';\r\n\r\nexport const CommsPractice = ({practiceTargets}) => {\r\n\r\n    const comms = JSON.parse(localStorage.getItem(\"comms\"))||{};\r\n\r\n    const [commPos, setCommPos] = useState(0)\r\n    \r\n    const nextComm = () => {\r\n        setCommPos(Math.min(commPos+1, practiceTargets.length));\r\n    }\r\n\r\n    const previousComm = () => {\r\n        setCommPos(Math.max(commPos-1, 0));\r\n    }\r\n    \r\n    \r\n    const retry = () => {\r\n        practiceTargets.sort(() => (Math.random() - 0.5));\r\n        setCommPos(0);\r\n    }\r\n    \r\n    useKeypress([\" \", \"ArrowRight\"], nextComm);\r\n    useKeypress(\"ArrowLeft\", previousComm);\r\n\r\n    //const [debug, setDebug] = useState('debug')\r\n\r\n    return (\r\n        <div onTouchStart={nextComm}>\r\n            {commPos < practiceTargets.length?\r\n                <>\r\n                <h2 className='position-relative'>\r\n                    {translatePair(practiceTargets[commPos])}\r\n                    <button\r\n                        className='position-absolute top-0 btn btn-dark btn-sm mx-1'\r\n                        style={{\r\n                            width: '20px',\r\n                            height: '20px',\r\n                            borderRadius: '15px',\r\n                            fontSize: '11px',\r\n                            padding: '0px 6px',\r\n                            textAlign: 'center',\r\n                        }}\r\n                        title={comms[practiceTargets[commPos].join(\"-\")]||'no comm'}\r\n                    >\r\n                        ?\r\n                    </button>\r\n                </h2>\r\n                <h5>\r\n                    {`${commPos+1}/${practiceTargets.length}`}\r\n                </h5>\r\n                </>\r\n            :\r\n                <>\r\n                <h2>Done!</h2>\r\n                <button className='btn btn-primary' onClick={retry} autoFocus>\r\n                    Retry?\r\n                </button>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { generatePairs } from '../helpers/piecesLogic';\r\n\r\nexport const TargetsSelection = ({targets, setPracticeTargets}) => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n\r\n    const toggleAll = () => {\r\n        const allCheckbox = document.getElementById(\"All\");\r\n        targets.forEach(target => document.getElementById(target).checked = allCheckbox.checked);\r\n    }\r\n\r\n    const go = () => {\r\n        setPracticeTargets(generatePairs(targets));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{columnCount: 4, textAlign: 'left', marginLeft: 40}}>\r\n                <div>\r\n                    <input\r\n                        type = \"checkbox\"\r\n                        id = \"starting\"\r\n                        value = \"starting\"\r\n                    />\r\n                    <label htmlFor='starting' style={{marginLeft: 2}}>Starting with</label><br/>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type = \"checkbox\"\r\n                        id = \"ending\"\r\n                        value = \"ending\"\r\n                    />\r\n                    <label htmlFor='ending' style={{marginLeft: 2}}>Ending with :</label><br/>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n            <div style={{columnCount: 4, textAlign: 'left', marginLeft: 40}}>\r\n                <div key = \"All\">\r\n                    <input\r\n                        type = \"checkbox\"\r\n                        id = \"All\"\r\n                        value = \"All\"\r\n                        onClick = {toggleAll}\r\n                    />\r\n                    <label htmlFor='All' style={{marginLeft: 2}}>All</label><br/>\r\n                </div>\r\n                {targets.map(target => (\r\n                    <div key = {target} >\r\n                        <input\r\n                            type = \"checkbox\"\r\n                            id = {target}\r\n                            value = {target}\r\n                        />\r\n                        <label htmlFor={target} style={{marginLeft: 2}}>{letterScheme[target]}</label><br/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <br/>\r\n            <button className=\"btn btn-primary btn-lg\" onClick={go}>\r\n                Go\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTargets } from '../helpers/piecesLogic';\r\nimport { CommsPractice } from './CommsPractice';\r\nimport { TargetsSelection } from './TargetsSelection';\r\n\r\nexport const CommsTrainer = ({pieceType}) => {\r\n    \r\n    const [practiceTargets, setPracticeTargets] = useState([])\r\n\r\n    const targets = getTargets(pieceType);\r\n    \r\n    if (!targets) {\r\n        return (\r\n            <>\r\n                <h1 className='m-4'>\r\n                    {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n                </h1>\r\n                <div className=\"alert alert-warning alert-dismissible m-2\" role=\"alert\">\r\n                    Looks like you don't have a letter scheme, do you want to <Link to=\"/config\">make one</Link>?\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const back = () => {\r\n        setPracticeTargets([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n            </h1>\r\n\r\n            {practiceTargets.length?\r\n                <>\r\n                <button className=\"btn btn-primary\" style={{float: 'right'}} onClick={back}>\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n                <CommsPractice practiceTargets={practiceTargets}/>\r\n                </>\r\n            :\r\n                <>\r\n                <Link to=\"/train\">\r\n                    <button className=\"btn btn-primary\" style={{float: 'right'}}>\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n                <TargetsSelection targets={targets} setPracticeTargets={setPracticeTargets}/>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Config = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                Config\r\n            </h1>\r\n            <Link to=\"/config/letter_scheme\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Letter scheme\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/edge_comms\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Edge comms\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/corner_comms\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Corner comms\r\n                </button>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { stickers } from '../helpers/stickers';\r\nimport '../styles/cubeLayout.css';\r\n\r\nexport const CubeLayout = () => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [isMounted, setIsMounted] = useState(true);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsMounted(false);\r\n        }\r\n    }, []);\r\n\r\n    const save = () => {\r\n        let errors = [];\r\n        let letterScheme = {};\r\n\r\n        // check for edge buffer\r\n        let edgeBuffer = '';\r\n        document.getElementsByName(\"edge-buffer\").forEach( stickerRadio => {\r\n            if (stickerRadio.checked) {\r\n                edgeBuffer = stickerRadio.value;\r\n                letterScheme['edgeBuffer'] = edgeBuffer;\r\n            }\r\n        });\r\n        if (!edgeBuffer) {errors.push('Must select edge buffer');}\r\n\r\n        // check for corner buffer\r\n        let cornerBuffer = '';\r\n        document.getElementsByName(\"corner-buffer\").forEach( stickerRadio => {\r\n            if (stickerRadio.checked) {\r\n                cornerBuffer = stickerRadio.value\r\n                letterScheme['cornerBuffer'] = cornerBuffer;\r\n            }\r\n        });\r\n        if (!cornerBuffer) {errors.push('Must select corner buffer');}\r\n\r\n        // check all sticker letters\r\n        let allAsigned = '';\r\n        let asignedEdges = [];\r\n        let asignedCorners = [];\r\n        let repeatedEdgeError = '';\r\n        let repeatedCornerError = '';\r\n        let reapetedEdgeLetters = [];\r\n        let reapetedCornerLetters = [];\r\n        stickers.filter( sticker => sticker.length > 1).forEach( sticker => {\r\n            const stickerField = document.getElementById(sticker);\r\n            letterScheme[sticker] = stickerField.value;\r\n            if (!stickerField.value) {\r\n                allAsigned = 'Must asign all letters';\r\n                stickerField.className = `form-control sticker-textfield error`\r\n            } else {\r\n                stickerField.className = `form-control sticker-textfield`\r\n                if (sticker.length === 2) {\r\n                    if (asignedEdges.includes(stickerField.value)) {\r\n                        reapetedEdgeLetters.push(stickerField.value);\r\n                        repeatedEdgeError = 'There are edges with the same letter'\r\n                    }\r\n                    asignedEdges.push(stickerField.value);\r\n                } else if (sticker.length === 3) {\r\n                    if (asignedCorners.includes(stickerField.value)) {\r\n                        reapetedCornerLetters.push(stickerField.value);\r\n                        repeatedCornerError = 'There are corners with the same letter'\r\n                    }\r\n                    asignedCorners.push(stickerField.value);\r\n                }\r\n            }\r\n        });\r\n        stickers.forEach( sticker => {\r\n            const stickerField = document.getElementById(sticker);\r\n            if (sticker.length === 2) {\r\n                if (reapetedEdgeLetters.includes(stickerField.value)) {\r\n                    stickerField.className = `form-control sticker-textfield error`\r\n                }\r\n            } else if (sticker.length === 3) {\r\n                if (reapetedCornerLetters.includes(stickerField.value)) {\r\n                    stickerField.className = `form-control sticker-textfield error`\r\n                }\r\n            }\r\n        });\r\n        if (allAsigned) {errors.push(allAsigned);}\r\n        if (repeatedEdgeError) {errors.push(repeatedEdgeError);}\r\n        if (repeatedCornerError) {errors.push(repeatedCornerError);}\r\n\r\n        // check errors\r\n        if (errors.length) {\r\n            alert(errors.join(\"\\n\"));\r\n        } else {\r\n            localStorage.setItem('letterScheme',JSON.stringify(letterScheme));\r\n            setShowSuccess(true);\r\n            setTimeout(() => {\r\n                if (isMounted) {\r\n                    setShowSuccess(false)\r\n                }\r\n            }, 3500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid-container\">\r\n                {\r\n                    stickers.map( sticker => (\r\n                        <div className={`grid-item ${sticker}`} key={sticker}>\r\n                            <input\r\n                                type = \"text\"\r\n                                className = 'form-control sticker-textfield'\r\n                                disabled = {sticker.length === 1}\r\n                                maxLength = \"1\"\r\n                                key = {sticker}\r\n                                id = {sticker}\r\n                                placeholder = {sticker}\r\n                                defaultValue = {letterScheme && letterScheme[sticker]}\r\n                            />\r\n                            {sticker.length === 1||\r\n                                <input\r\n                                    type = \"radio\"\r\n                                    className = \"sticker-buffer\"\r\n                                    name = {sticker.length === 2?'edge-buffer':'corner-buffer'}\r\n                                    value = {sticker}\r\n                                    defaultChecked = {letterScheme && (sticker === letterScheme.edgeBuffer || sticker === letterScheme.cornerBuffer)}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    ) )\r\n                }\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={save}>\r\n                Save\r\n            </button>\r\n\r\n            {showSuccess && \r\n                <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                    Letter scheme saved.\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                Home\r\n            </h1>\r\n            <Link to=\"/train\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Train\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Config\r\n                </button>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport '../styles/sidebar.css';\r\n\r\nexport const Sidebar = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column flex-shrink-0 bg-light vh-100\" style={{width: '100px'}}>\r\n\r\n            <ul className=\"nav nav-pills nav-flush flex-column mb-auto text-center\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink exact to=\"/\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-home\"></i>\r\n                        <small>Home</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to=\"/train\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-brain\"></i>\r\n                        <small>Train</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to=\"/config\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-cog\"></i>\r\n                        <small>Config</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                {/*<li>\r\n                    <NavLink to=\"/test\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                        <small>Tests</small>\r\n                    </NavLink>\r\n                </li>*/}\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div style={{\r\n            position: 'relative',\r\n            width: '55px',\r\n            height: '55px'\r\n        }}>\r\n            <input style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '55px',\r\n                height: '55px'\r\n            }} />\r\n            <input type=\"radio\" style={{\r\n                position: 'absolute',\r\n                top: 2,\r\n                left: 2\r\n            }} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Train = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                What do you want yo train?\r\n            </h1>\r\n            <Link to=\"/train/edge_comms\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Edge comms\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/train/corner_comms\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Corner comms\r\n                </button>\r\n            </Link>\r\n            <button type=\"button\" className=\"btn btn-primary btn-lg m-2\" disabled>\r\n                <i className=\"fa fa-brain\"></i> Coming soon...\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { CommsConfig } from '../components/CommsConfig';\r\n\r\n  import { CommsTrainer } from '../components/CommsTrainer';\r\nimport { Config } from '../components/Config';\r\nimport { CubeLayout } from '../components/CubeLayout';\r\nimport { Home } from '../components/Home';\r\nimport { Sidebar } from '../components/Sidebar';\r\nimport { Test } from '../components/Test';\r\nimport { Train } from '../components/Train';\r\n\r\nexport const AppRouter = () => {\r\n  \r\n    return (\r\n        <Router>\r\n            <div className=\"d-flex\">\r\n                <Sidebar />\r\n\r\n                <div className=\"main-div\">\r\n                    <Switch>\r\n                        <Route path=\"/train/edge_comms\">\r\n                            <CommsTrainer pieceType={'edge'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/train/corner_comms\">\r\n                            <CommsTrainer pieceType={'corner'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/train\">\r\n                            <Train />\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/config/letter_scheme\">\r\n                            <CubeLayout />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/edge_comms\">\r\n                            <CommsConfig pieceType={'edge'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/corner_comms\">\r\n                            <CommsConfig pieceType={'corner'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config\">\r\n                            <Config />\r\n                        </Route>\r\n\r\n                        <Route path=\"/test\">\r\n                            <Test />\r\n                        </Route>\r\n\r\n                        <Route path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        \r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport './App.css';\n//import { CubeLayout } from './components/CubeLayout';\nimport { AppRouter } from './routers/AppRouter';\n\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n//import { Sidebar } from './components/Sidebar';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}
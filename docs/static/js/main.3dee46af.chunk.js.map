{"version":3,"sources":["helpers/stickers.js","helpers/piecesLogic.js","components/CommsConfig.js","components/CommsPractice.js","hooks/useStopwatch.js","components/CommsTrainer.js","components/Config.js","components/CubeLayout.js","components/ExportConfig.js","components/Home.js","components/ImportConfig.js","components/Sidebar.js","components/Test.js","components/Train.js","routers/AppRouter.js","App.js","index.js"],"names":["stickers","notSamePiece","sticker1","sticker2","split","sort","join","getTargets","pieceType","letterScheme","JSON","parse","localStorage","getItem","stickerCount","filter","sticker","length","firstEl","secondEl","localeCompare","translatePair","pair","concat","CommsConfig","comms","targets","useState","firstTarget","setFirstTarget","showSuccess","setShowSuccess","className","style","display","toUpperCase","substring","to","role","secondTargets","secondTarget","change","targetStatus","target","reduce","completed","onClick","columnCount","map","htmlFor","type","id","onChange","defaultValue","forEach","commField","document","getElementById","value","setItem","stringify","CommsPractice","practiceTargets","timerEnabled","controlType","commPos","setCommPos","times","setTimes","time","setTime","isRunning","setIsRunning","useEffect","interval","setInterval","clearInterval","startTime","stopTime","restartTime","useStopwatch","nextComm","Math","min","previousComm","max","handleTimer","tempTimes","sum","Object","values","num","mean","round","dev","sqrt","t","evaluateTime","useKeypress","onTouchStart","title","tabIndex","random","autoFocus","pair1","pair2","color","CommsTrainer","setPracticeTargets","checked","controlSelected","getElementsByName","radioButton","textAlign","marginLeft","allCheckbox","name","defaultChecked","pairs","target1","target2","push","generatePairs","Config","CubeLayout","isMounted","setIsMounted","disabled","maxLength","placeholder","edgeBuffer","cornerBuffer","errors","stickerRadio","allAsigned","asignedEdges","asignedCorners","repeatedEdgeError","repeatedCornerError","reapetedEdgeLetters","reapetedCornerLetters","stickerField","includes","alert","setTimeout","ExportConfig","exportText","showFailure","setShowFailure","readOnly","height","copyText","select","setSelectionRange","navigator","clipboard","writeText","element","createElement","downloadText","setAttribute","encodeURIComponent","body","appendChild","click","Home","ImportConfig","config","configFile","files","console","log","fr","FileReader","onload","result","readAsText","Sidebar","width","exact","Test","Train","AppRouter","path","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.3dee46af.chunk.js","sourcesContent":["export const stickers = ['UBL','UB','UBR','UL','U','UR','UFL','UF','UFR','LUB','LU','LUF','FUL','FU','FUR','RUF','RU','RUB','BUR','BU','BUL','LB','L','LF','FL','F','FR','RF','R','RB','BR','B','BL','LDB','LD','LDF','FDL','FD','FDR','RDF','RD','RDB','BDR','BD','BDL','DFL','DF','DFR','DL','D','DR','DBL','DB','DBR'];","import { stickers } from '../helpers/stickers';\r\n\r\nexport const notSamePiece = (sticker1, sticker2) => {\r\n    return sticker1.split('').sort().join('') !== sticker2.split('').sort().join('');\r\n}\r\n\r\n/*export const notSamePieceByLetter = (sticker1, sticker2, type) => {\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    //console.log(sticker1, Object.keys(letterScheme).find(key => letterScheme[key] === sticker1), sticker2, Object.keys(letterScheme).find(key => letterScheme[key] === sticker2), notSamePieceByName(Object.keys(letterScheme).find(key => letterScheme[key] === sticker1), Object.keys(letterScheme).find(key => letterScheme[key] === sticker2)));\r\n    return notSamePieceByName(\r\n        Object.keys(letterScheme).filter(key => key.length === type).find(key => letterScheme[key] === sticker1),\r\n        Object.keys(letterScheme).filter(key => key.length === type).find(key => letterScheme[key] === sticker2)\r\n        );\r\n}*/\r\n\r\nexport const getTargets = (pieceType) => {\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n\r\n    if (!letterScheme) {\r\n        return false;\r\n    }\r\n\r\n    let stickerCount = 0;\r\n    if (pieceType === 'edge') {\r\n        stickerCount = 2;\r\n    } else if (pieceType === 'corner') {\r\n        stickerCount = 3;\r\n    }\r\n    \r\n    return stickers.filter(sticker => (sticker.length === stickerCount && notSamePiece(sticker, letterScheme[`${pieceType}Buffer`]))).sort((firstEl, secondEl) => (letterScheme[firstEl].localeCompare(letterScheme[secondEl])));\r\n}\r\n\r\n\r\nexport const generatePairs = (targets) => {\r\n    //console.log(\"generating pairs\");\r\n    let pairs = [];\r\n    targets.forEach(target1 => {\r\n        targets.forEach(target2 => {\r\n            if (notSamePiece(target1, target2)) {\r\n                //console.log(target1.concat(target2), pairs.includes(target1.concat(target2)));\r\n                if ((document.getElementById(\"starting\").checked && document.getElementById(target1).checked) || (document.getElementById(\"ending\").checked && document.getElementById(target2).checked)) {\r\n                    pairs.push([target1, target2]);\r\n                }\r\n            }\r\n        });\r\n    });\r\n    //console.log(pairs);\r\n    return pairs.sort(() => (Math.random() - 0.5));\r\n}\r\n\r\nexport const translatePair = (pair) => {\r\n    // Translate from [XYZ, XYZ] to 'AB'\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    return letterScheme[pair[0]].concat(letterScheme[pair[1]]);\r\n}","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTargets, notSamePiece, translatePair } from '../helpers/piecesLogic';\r\n\r\nexport const CommsConfig = ({pieceType}) => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    let comms = JSON.parse(localStorage.getItem(\"comms\"))||{};\r\n\r\n    const targets = getTargets(pieceType);\r\n    const [firstTarget, setFirstTarget] = useState('');\r\n    \r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n\r\n    if (!targets) {\r\n        return (\r\n            <>\r\n                <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                    {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n                </h1>\r\n                <Link to=\"/config\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n\r\n                <div className=\"alert alert-warning alert-dismissible m-2\" role=\"alert\">\r\n                    Looks like you don't have a letter scheme, do you want to <Link to=\"/config/letter_scheme\">make one</Link>?\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    const secondTargets = targets.filter(secondTarget => (notSamePiece(firstTarget, secondTarget)));\r\n\r\n    const back = () => {\r\n        setFirstTarget(\"\");\r\n    }\r\n\r\n    const save = () => {\r\n        secondTargets.forEach(secondTarget => {\r\n            const commField = document.getElementById(secondTarget);\r\n            if (commField.value) {\r\n                comms[`${firstTarget}-${secondTarget}`] = commField.value;\r\n            }\r\n        });\r\n        \r\n        localStorage.setItem('comms',JSON.stringify(comms));\r\n        setShowSuccess(true);\r\n    }\r\n\r\n    const change = () => {\r\n        setShowSuccess(false);\r\n    }\r\n    \r\n    const targetStatus = (target) => {\r\n        const secondTargets = targets.filter(secondTarget => (notSamePiece(target, secondTarget)));\r\n        return secondTargets.reduce((completed, secondTarget) => (\r\n            completed && !!comms[`${target}-${secondTarget}`]\r\n        ))?'primary':'secondary';\r\n    }    \r\n\r\n    return (\r\n        <>\r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n            </h1>\r\n\r\n            {firstTarget?<>\r\n                <button className=\"btn btn-primary back\" onClick={back}>\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n                <div style={{columnCount: 2}}>\r\n                    {secondTargets.map(secondTarget => (\r\n                        <div key={secondTarget} className='mx-3 row'>\r\n                            <label htmlFor={secondTarget} className='col-1 col-form-label'>\r\n                                {translatePair([firstTarget, secondTarget])}:\r\n                            </label>\r\n                            <div className='col-10'>\r\n                                <input\r\n                                    type = \"text\"\r\n                                    className = 'form-control'\r\n                                    key = {secondTarget}\r\n                                    id = {secondTarget}\r\n                                    onChange = {change}\r\n                                    defaultValue = {comms[`${firstTarget}-${secondTarget}`]}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button className='btn btn-primary btn-lg mt-3' onClick={save}>\r\n                    Save\r\n                </button>\r\n                {showSuccess && \r\n                    <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                        Comms saved.\r\n                    </div>\r\n                }\r\n            </>:<>\r\n                <Link to=\"/config\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n                <br/>\r\n                {targets.map(target => (\r\n                    <button key={target} className={`btn btn-${targetStatus(target)} btn-lg m-2`} onClick={() => {setFirstTarget(target);}}>\r\n                        {letterScheme[target]}\r\n                    </button>\r\n                ))}\r\n            </>}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport useKeypress from 'react-use-keypress';\r\n\r\nimport { useStopwatch } from '../hooks/useStopwatch';\r\nimport { translatePair } from '../helpers/piecesLogic';\r\n\r\nexport const CommsPractice = ({practiceTargets, timerEnabled, controlType}) => {\r\n\r\n    const comms = JSON.parse(localStorage.getItem(\"comms\"))||{};\r\n\r\n    const [commPos, setCommPos] = useState(0);\r\n    const [times, setTimes] = useState({});\r\n    \r\n    const {\r\n        time,\r\n        startTime,\r\n        stopTime,\r\n        restartTime,\r\n        isRunning\r\n      } = useStopwatch();\r\n\r\n      useEffect(() => {\r\n        if (!timerEnabled) {\r\n            stopTime();\r\n        }\r\n      }, [timerEnabled, stopTime]);\r\n      \r\n    \r\n    const nextComm = () => {\r\n        setCommPos(Math.min(commPos+1, practiceTargets.length));\r\n        if (timerEnabled) {\r\n            restartTime();\r\n            startTime();\r\n        }\r\n    }\r\n\r\n    const previousComm = () => {\r\n        setCommPos(Math.max(commPos-1, 0));\r\n    }\r\n    \r\n    const handleTimer = () => {\r\n        if (isRunning && timerEnabled) {\r\n            stopTime();\r\n            let tempTimes = {...times};\r\n            tempTimes[translatePair(practiceTargets[commPos])] = time\r\n            setTimes(tempTimes);\r\n        } else {\r\n            nextComm();\r\n        }\r\n    }\r\n    \r\n    \r\n    const retry = () => {\r\n        practiceTargets.sort(() => (Math.random() - 0.5));\r\n        setCommPos(0);\r\n    }\r\n\r\n    const sum = (times) => {\r\n        return Object.values(times).reduce((sum, num) => (sum+num));\r\n    }\r\n\r\n    const mean = (times) => {\r\n        return Math.round(sum(times)/Object.values(times).length);\r\n    }\r\n    \r\n    const dev = (times) => {\r\n        return Math.round(Math.sqrt(Object.values(times).map(t => ((t-mean(times))**2)).reduce((sum, num) => (sum+num))/Object.values(times).length));\r\n    };\r\n    \r\n    const evaluateTime = (time) => {\r\n        if (time > mean(times) + dev(times)) {\r\n            return 'red';\r\n        }\r\n        if (time < mean(times) - dev(times)) {\r\n            return 'green';\r\n        }\r\n        return 'blue';\r\n    };\r\n    \r\n    \r\n    useKeypress(\" \", () => {controlType===\"keyboard\" && handleTimer()});\r\n    useKeypress(\"ArrowRight\", () => {controlType===\"keyboard\" && nextComm()});\r\n    useKeypress(\"ArrowLeft\", () => {controlType===\"keyboard\" && previousComm()});\r\n\r\n    //const [debug, setDebug] = useState('debug')\r\n\r\n    return (<>\r\n        <div onTouchStart={() => {controlType===\"touch\" && nextComm()}}>\r\n            {commPos < practiceTargets.length?\r\n                <>\r\n                <h1 className='position-relative'>\r\n                    {translatePair(practiceTargets[commPos])}\r\n                    <button\r\n                        className='reminder position-absolute top-0 btn btn-dark btn-sm mx-1'\r\n                        title={comms[practiceTargets[commPos].join(\"-\")]||'no comm'}\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#reminderModal\"\r\n                    >\r\n                        ?\r\n                    </button>\r\n                </h1>\r\n\r\n                {timerEnabled && <h3>{time}</h3>}\r\n\r\n                <h5>\r\n                    {`${commPos+1}/${practiceTargets.length}`}\r\n                </h5>\r\n\r\n                {controlType===\"buttons\" && <>\r\n                    <button className='btn btn-primary btn-lg' onClick={previousComm}>Prev comm</button>\r\n                    {timerEnabled && <button className='btn btn-primary btn-lg' onClick={handleTimer}>{isRunning?'Stop':'Start'} timer</button>}\r\n                    <button className='btn btn-primary btn-lg' onClick={nextComm}>Next comm</button>\r\n                </>}\r\n                <div className=\"modal fade\" id=\"reminderModal\" tabIndex=\"-1\" aria-labelledby=\"reminderModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">{translatePair(practiceTargets[commPos])}</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {comms[practiceTargets[commPos].join(\"-\")]||'no comm'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </>\r\n            :\r\n                <>\r\n                <h2>Done!</h2>\r\n                <button className='btn btn-primary' onClick={retry} autoFocus>\r\n                    Retry?\r\n                </button>\r\n\r\n                {timerEnabled && <>\r\n                    <h5>Total: {sum(times)} Mean: {mean(times)} Deviation: {dev(times)}</h5>\r\n\r\n                    <div style={{columnCount: 5}}>\r\n                        {practiceTargets.sort((pair1, pair2) => (times[translatePair(pair2)]-times[translatePair(pair1)])).map(pair => (\r\n                            <div key={translatePair(pair)} style={{color: evaluateTime(times[translatePair(pair)])}}>\r\n                                {`${translatePair(pair)} ${times[translatePair(pair)]}`}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>}\r\n                </>\r\n            }\r\n        </div>\r\n\r\n    </>)\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useStopwatch = () => {\r\n\r\n    const [time, setTime] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n      \r\n        if (isRunning) {\r\n            interval = setInterval(() => {\r\n                setTime((time) => time + 10);\r\n            }, 10);\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n      }, [isRunning]);\r\n\r\n    const startTime = () => {\r\n        setIsRunning(true);\r\n    }\r\n\r\n    const stopTime = () => {\r\n        setIsRunning(false);\r\n    }\r\n\r\n    const restartTime = () => {\r\n        setTime(0);\r\n    }\r\n    \r\n    \r\n    return {\r\n        time,\r\n        isRunning,\r\n        startTime,\r\n        stopTime,\r\n        restartTime\r\n    };\r\n    \r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTargets, generatePairs } from '../helpers/piecesLogic';\r\nimport { CommsPractice } from './CommsPractice';\r\n\r\nexport const CommsTrainer = ({pieceType}) => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    \r\n    const [practiceTargets, setPracticeTargets] = useState([]);\r\n    //const [timerEnabled, settimerEnabled] = useState(false);\r\n\r\n    const targets = getTargets(pieceType);\r\n    \r\n    if (!targets) {\r\n        return (\r\n            <>\r\n                <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                    {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n                </h1>\r\n                <Link to=\"/train\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n\r\n                <div className=\"alert alert-warning alert-dismissible m-2\" role=\"alert\">\r\n                    Looks like you don't have a letter scheme, do you want to <Link to=\"/config/letter_scheme\">make one</Link>?\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const back = () => {\r\n        setPracticeTargets([]);\r\n    }\r\n\r\n    const toggleAll = () => {\r\n        const allCheckbox = document.getElementById(\"All\");\r\n        targets.forEach(target => document.getElementById(target).checked = allCheckbox.checked);\r\n    }\r\n\r\n    const go = () => {\r\n        setPracticeTargets(generatePairs(targets));\r\n    }\r\n\r\n    const controlType = () => {\r\n        let controlSelected = ''\r\n        document.getElementsByName(\"controls\").forEach( radioButton => {\r\n            if (radioButton.checked) {\r\n                controlSelected = radioButton.value;\r\n            }\r\n        });\r\n        return controlSelected;\r\n    }    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n            </h1>\r\n\r\n            {practiceTargets.length?\r\n                <>\r\n                <button className=\"btn btn-primary back\" onClick={back}>\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n                <CommsPractice practiceTargets={practiceTargets} timerEnabled={document.getElementById('timer').checked} controlType={controlType()}/>\r\n                </>\r\n            :\r\n                <>\r\n                <Link to=\"/train\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n                \r\n                <div style={{columnCount: 4, textAlign: 'left', marginLeft: 40}}>\r\n                    <div>\r\n                        <input\r\n                            type = \"checkbox\"\r\n                            id = \"starting\"\r\n                            value = \"starting\"\r\n                        />\r\n                        <label htmlFor='starting'>Starting with</label><br/>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type = \"checkbox\"\r\n                            id = \"ending\"\r\n                            value = \"ending\"\r\n                        />\r\n                        <label htmlFor='ending'>Ending with :</label><br/>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n\r\n                <div style={{columnCount: 4, textAlign: 'left', marginLeft: 40}}>\r\n                    <div key = \"All\">\r\n                        <input\r\n                            type = \"checkbox\"\r\n                            id = \"All\"\r\n                            value = \"All\"\r\n                            onClick = {toggleAll}\r\n                        />\r\n                        <label htmlFor='All'>All</label><br/>\r\n                    </div>\r\n                    {targets.map(target => (\r\n                        <div key = {target} >\r\n                            <input\r\n                                type = \"checkbox\"\r\n                                id = {target}\r\n                                value = {target}\r\n                            />\r\n                            <label htmlFor={target}>{letterScheme[target]}</label><br/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <br />\r\n                <div style={{textAlign: 'left', marginLeft: 40}}>\r\n                    <input\r\n                        type='checkbox'\r\n                        id='timer'\r\n                    />\r\n                    <label htmlFor='timer'>Timer</label>\r\n                </div>\r\n\r\n                <br />\r\n                <div style={{columnCount: 4, textAlign: 'left', marginLeft: 40}}>\r\n                    <p>Controls:</p>\r\n\r\n                    <div>\r\n                        <input type=\"radio\" id='keyboard' name='controls' value=\"keyboard\" defaultChecked/>\r\n                        <label htmlFor='keyboard'>Keyboard</label>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <input type=\"radio\" id=\"touch\" name='controls' value=\"touch\"/>\r\n                        <label htmlFor='touch'>Touch</label>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <input type=\"radio\" id='buttons' name='controls' value=\"buttons\"/>\r\n                        <label htmlFor='buttons'>Buttons</label>\r\n                    </div>\r\n                </div>\r\n                \r\n                <button className=\"btn btn-primary btn-lg mt-3\" onClick={go}>\r\n                    Go\r\n                </button>\r\n\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Config = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                Config\r\n            </h1>\r\n            <Link to=\"/config/letter_scheme\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Letter scheme\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/edge_comms\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Edge comms\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/corner_comms\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Corner comms\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/export_config\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-download\"></i> Export config\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/import_config\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-upload\"></i> Import config\r\n                </button>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { stickers } from '../helpers/stickers';\r\nimport '../styles/cubeLayout.css';\r\n\r\nexport const CubeLayout = () => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [isMounted, setIsMounted] = useState(true);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsMounted(false);\r\n        }\r\n    }, []);\r\n\r\n    const save = () => {\r\n        let errors = [];\r\n        let letterScheme = {};\r\n\r\n        // check for edge buffer\r\n        let edgeBuffer = '';\r\n        document.getElementsByName(\"edge-buffer\").forEach( stickerRadio => {\r\n            if (stickerRadio.checked) {\r\n                edgeBuffer = stickerRadio.value;\r\n                letterScheme['edgeBuffer'] = edgeBuffer;\r\n            }\r\n        });\r\n        if (!edgeBuffer) {errors.push('Must select edge buffer');}\r\n\r\n        // check for corner buffer\r\n        let cornerBuffer = '';\r\n        document.getElementsByName(\"corner-buffer\").forEach( stickerRadio => {\r\n            if (stickerRadio.checked) {\r\n                cornerBuffer = stickerRadio.value\r\n                letterScheme['cornerBuffer'] = cornerBuffer;\r\n            }\r\n        });\r\n        if (!cornerBuffer) {errors.push('Must select corner buffer');}\r\n\r\n        // check all sticker letters\r\n        let allAsigned = '';\r\n        let asignedEdges = [];\r\n        let asignedCorners = [];\r\n        let repeatedEdgeError = '';\r\n        let repeatedCornerError = '';\r\n        let reapetedEdgeLetters = [];\r\n        let reapetedCornerLetters = [];\r\n        stickers.filter( sticker => sticker.length > 1).forEach( sticker => {\r\n            const stickerField = document.getElementById(sticker);\r\n            letterScheme[sticker] = stickerField.value;\r\n            if (!stickerField.value) {\r\n                allAsigned = 'Must asign all letters';\r\n                stickerField.className = `form-control sticker-textfield error`\r\n            } else {\r\n                stickerField.className = `form-control sticker-textfield`\r\n                if (sticker.length === 2) {\r\n                    if (asignedEdges.includes(stickerField.value)) {\r\n                        reapetedEdgeLetters.push(stickerField.value);\r\n                        repeatedEdgeError = 'There are edges with the same letter'\r\n                    }\r\n                    asignedEdges.push(stickerField.value);\r\n                } else if (sticker.length === 3) {\r\n                    if (asignedCorners.includes(stickerField.value)) {\r\n                        reapetedCornerLetters.push(stickerField.value);\r\n                        repeatedCornerError = 'There are corners with the same letter'\r\n                    }\r\n                    asignedCorners.push(stickerField.value);\r\n                }\r\n            }\r\n        });\r\n        stickers.forEach( sticker => {\r\n            const stickerField = document.getElementById(sticker);\r\n            if (sticker.length === 2) {\r\n                if (reapetedEdgeLetters.includes(stickerField.value)) {\r\n                    stickerField.className = `form-control sticker-textfield error`\r\n                }\r\n            } else if (sticker.length === 3) {\r\n                if (reapetedCornerLetters.includes(stickerField.value)) {\r\n                    stickerField.className = `form-control sticker-textfield error`\r\n                }\r\n            }\r\n        });\r\n        if (allAsigned) {errors.push(allAsigned);}\r\n        if (repeatedEdgeError) {errors.push(repeatedEdgeError);}\r\n        if (repeatedCornerError) {errors.push(repeatedCornerError);}\r\n\r\n        // check errors\r\n        if (errors.length) {\r\n            alert(errors.join(\"\\n\"));\r\n        } else {\r\n            localStorage.setItem('letterScheme',JSON.stringify(letterScheme));\r\n            setShowSuccess(true);\r\n            setTimeout(() => {\r\n                if (isMounted) {\r\n                    setShowSuccess(false)\r\n                }\r\n            }, 3500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1 className='m-2' style={{display: 'inline-block'}}>\r\n                    Letter scheme\r\n                </h1>\r\n                <Link to=\"/config\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"grid-container\">\r\n                {\r\n                    stickers.map( sticker => (\r\n                        <div className={`grid-item ${sticker}`} key={sticker}>\r\n                            <input\r\n                                type = \"text\"\r\n                                className = 'form-control sticker-textfield'\r\n                                disabled = {sticker.length === 1}\r\n                                maxLength = \"1\"\r\n                                key = {sticker}\r\n                                id = {sticker}\r\n                                placeholder = {sticker}\r\n                                defaultValue = {letterScheme && letterScheme[sticker]}\r\n                            />\r\n                            {sticker.length === 1||\r\n                                <input\r\n                                    type = \"radio\"\r\n                                    className = \"sticker-buffer\"\r\n                                    name = {sticker.length === 2?'edge-buffer':'corner-buffer'}\r\n                                    value = {sticker}\r\n                                    defaultChecked = {letterScheme && (sticker === letterScheme.edgeBuffer || sticker === letterScheme.cornerBuffer)}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    ) )\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg mt-3\" onClick={save}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n\r\n            {showSuccess && \r\n                <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                    Letter scheme saved.\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ExportConfig = () => {\r\n\r\n    const letterScheme = localStorage.getItem(\"letterScheme\");\r\n    const comms = localStorage.getItem(\"comms\");\r\n    \r\n    const exportText = {letterScheme, comms};\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [showFailure, setShowFailure] = useState(false);\r\n\r\n    const copy = () => {\r\n        const copyText = document.getElementById(\"export\");\r\n\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n      \r\n        try {\r\n            navigator.clipboard.writeText(copyText.value);\r\n            setShowSuccess(true);\r\n        } catch {\r\n            setShowFailure(true);\r\n        }\r\n    };\r\n\r\n    const download = () => {\r\n        let element = document.createElement('a');\r\n        const downloadText = document.getElementById(\"export\").value;\r\n        element.setAttribute('href','data:text/plain;charset=utf-8, ' + encodeURIComponent(downloadText));\r\n        element.setAttribute('download', 'comms-trainer-config.txt');\r\n        document.body.appendChild(element);\r\n        element.click();\r\n    };\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                Export config\r\n            </h1>\r\n            <Link to=\"/config\">\r\n                <button className=\"btn btn-primary back\">\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n            </Link>\r\n\r\n            <div className='m-3'>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    id=\"export\"\r\n                    readOnly\r\n                    value={JSON.stringify(exportText)}\r\n                    style={{height: \"20em\"}}\r\n                ></textarea>\r\n            </div>\r\n\r\n            <button className='btn btn-primary' title='Copy to clipboard' onClick={copy}>Copy</button>\r\n            <span className='mx-2'>or</span>\r\n            <button className='btn btn-primary' title='Download export file' onClick={download}>Download</button>\r\n\r\n            {showSuccess && \r\n                <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                    Text copied.\r\n                </div>\r\n            }\r\n\r\n            {showFailure && \r\n                <div className=\"alert alert-danger m-2\" role=\"alert\">\r\n                    Could not copy.\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                Home\r\n            </h1>\r\n            <Link to=\"/train\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Train\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Config\r\n                </button>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ImportConfig = () => {\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [showFailure, setShowFailure] = useState(false);\r\n\r\n    const importConfig = () => {\r\n        try {\r\n            const config = document.getElementById(\"import\").value;\r\n            const {letterScheme, comms} = JSON.parse(config);\r\n            \r\n            localStorage.setItem('letterScheme', letterScheme);\r\n            localStorage.setItem('comms', comms);\r\n\r\n            setShowFailure(false);\r\n            setShowSuccess(true);\r\n        } catch {\r\n            setShowSuccess(false);\r\n            setShowFailure(true);\r\n        }\r\n    }\r\n\r\n    const upload = () => {\r\n        try {\r\n            const configFile = document.getElementById(\"configFile\").files[0];\r\n            console.log(configFile);\r\n    \r\n            const fr = new FileReader();\r\n            fr.onload = () => {\r\n                const {letterScheme, comms} = JSON.parse(fr.result);\r\n            \r\n                localStorage.setItem('letterScheme', letterScheme);\r\n                localStorage.setItem('comms', comms);\r\n    \r\n                setShowFailure(false);\r\n                setShowSuccess(true);\r\n            };\r\n            fr.readAsText(configFile);\r\n        } catch {\r\n            setShowSuccess(false);\r\n            setShowFailure(true);\r\n        }\r\n    }    \r\n    \r\n    return (\r\n        <>\r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                Import config\r\n            </h1>\r\n            <Link to=\"/config\">\r\n                <button className=\"btn btn-primary back\">\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n            </Link>\r\n\r\n            <div className='m-3'>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    id=\"import\"\r\n                    style={{height: \"17em\"}}\r\n                ></textarea>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={importConfig}>Import</button>\r\n            \r\n            <p>or</p>\r\n\r\n            <div className='m-3'>\r\n                <input type=\"file\" id='configFile' className='form-control' />\r\n            </div>\r\n            <button className='btn btn-primary' onClick={upload}>Upload</button>\r\n\r\n            {showSuccess && \r\n                <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                    Imported.\r\n                </div>\r\n            }\r\n\r\n            {showFailure && \r\n                <div className=\"alert alert-danger m-2\" role=\"alert\">\r\n                    Could not import.\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport '../styles/sidebar.css';\r\n\r\nexport const Sidebar = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column flex-shrink-0 bg-light vh-100\" style={{width: '100px'}}>\r\n\r\n            <ul className=\"nav nav-pills nav-flush flex-column mb-auto text-center\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink exact to=\"/\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-home\"></i>\r\n                        <small>Home</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to=\"/train\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-brain\"></i>\r\n                        <small>Train</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to=\"/config\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-cog\"></i>\r\n                        <small>Config</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                {/*<li>\r\n                    <NavLink to=\"/test\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                        <small>Tests</small>\r\n                    </NavLink>\r\n                </li>*/}\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Test = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                Launch demo modal\r\n            </button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            ...\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Train = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                What do you want yo train?\r\n            </h1>\r\n            <Link to=\"/train/edge_comms\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Edge comms\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/train/corner_comms\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Corner comms\r\n                </button>\r\n            </Link>\r\n            <button type=\"button\" className=\"btn btn-primary btn-lg m-2\" disabled>\r\n                <i className=\"fa fa-brain\"></i> Coming soon...\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { CommsConfig } from '../components/CommsConfig';\r\n\r\n  import { CommsTrainer } from '../components/CommsTrainer';\r\nimport { Config } from '../components/Config';\r\nimport { CubeLayout } from '../components/CubeLayout';\r\nimport { ExportConfig } from '../components/ExportConfig';\r\nimport { Home } from '../components/Home';\r\nimport { ImportConfig } from '../components/ImportConfig';\r\nimport { Sidebar } from '../components/Sidebar';\r\nimport { Test } from '../components/Test';\r\nimport { Train } from '../components/Train';\r\n\r\nexport const AppRouter = () => {\r\n  \r\n    return (\r\n        <Router>\r\n            <div className=\"d-flex\">\r\n                <Sidebar />\r\n\r\n                <div className=\"main-div\">\r\n                    <Switch>\r\n                        <Route path=\"/train/edge_comms\">\r\n                            <CommsTrainer pieceType={'edge'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/train/corner_comms\">\r\n                            <CommsTrainer pieceType={'corner'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/train\">\r\n                            <Train />\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/config/letter_scheme\">\r\n                            <CubeLayout />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/edge_comms\">\r\n                            <CommsConfig pieceType={'edge'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/corner_comms\">\r\n                            <CommsConfig pieceType={'corner'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/export_config\">\r\n                            <ExportConfig />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/import_config\">\r\n                            <ImportConfig />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config\">\r\n                            <Config />\r\n                        </Route>\r\n\r\n                        <Route path=\"/test\">\r\n                            <Test />\r\n                        </Route>\r\n\r\n                        <Route path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        \r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport './App.css';\nimport './styles/general.css';\n//import { CubeLayout } from './components/CubeLayout';\nimport { AppRouter } from './routers/AppRouter';\n\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n//import { Sidebar } from './components/Sidebar';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}
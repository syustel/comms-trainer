{"version":3,"sources":["helpers/stickers.js","helpers/cubeLogic.js","components/CommsConfig.js","components/CommsPractice.js","hooks/useStopwatch.js","components/CommsTrainer.js","components/Config.js","components/CubeLayout.js","components/ExportConfig.js","components/Home.js","components/ImportConfig.js","components/Sidebar.js","components/Test.js","components/Train.js","routers/AppRouter.js","App.js","index.js"],"names":["stickers","cornersRotations","notSamePiece","sticker1","sticker2","split","sort","join","getTargets","pieceType","letterScheme","JSON","parse","localStorage","getItem","stickerCount","filter","sticker","length","firstEl","secondEl","localeCompare","translatePair","pair","concat","performCycle","cycle","t1","t2","t3","cubejsStickers","forEach","face","push","map","piece","ot1","ot2","ot3","t1Index","indexOf","t2Index","t3Index","ot1Index","ot2Index","ot3Index","buff","rotation","find","nextFace","cwt1","cwt2","cwt3","acwt1","acwt2","acwt3","cwt1Index","cwt2Index","cwt3Index","acwt1Index","acwt2Index","acwt3Index","validateComm","comm","alg","parsedAlg","Scramble","cubejs","Cubejs","fromString","move","isSolved","scramble","applyModifiers","token","modifiers","modifiersString","suffix","modifier","match","substring","parseModifiers","moves","i","info","_special","left","_joinTokens","leftTokens","right","rightTokens","type","inverse","parseSpecial","number","parseInt","Array","fill","_tokenize","inverseToken","inverseSpecial","reverse","firstToken","firstMove","groupsCount","index","group","Math","floor","isOk","tokens","beginToken","trim","replace","CommsConfig","comms","targets","useState","firstTarget","setFirstTarget","showSuccess","setShowSuccess","className","style","display","toUpperCase","to","role","buffer","secondTargets","secondTarget","selectTarget","e","target","name","handleChange","value","id","validAlg","targetStatus","completed","reduce","correct","onClick","columnCount","htmlFor","onChange","defaultValue","commField","document","getElementById","setItem","stringify","CommsPractice","practiceTargets","timerEnabled","controlType","commPos","setCommPos","times","setTimes","time","setTime","isRunning","setIsRunning","useEffect","interval","setInterval","clearInterval","startTime","stopTime","restartTime","useStopwatch","nextComm","min","previousComm","max","handleTimer","tempTimes","sum","Object","values","num","calcMean","useCallback","round","mean","useMemo","calcDev","sqrt","t","dev","evaluateTime","useKeypress","onTouchStart","title","tabIndex","random","autoFocus","pair1","pair2","color","CommsTrainer","setPracticeTargets","checked","controlSelected","getElementsByName","radioButton","textAlign","marginLeft","allCheckbox","defaultChecked","pairs","target1","target2","generatePairs","Config","CubeLayout","isMounted","setIsMounted","disabled","maxLength","placeholder","edgeBuffer","cornerBuffer","errors","stickerRadio","allAsigned","asignedEdges","asignedCorners","repeatedEdgeError","repeatedCornerError","reapetedEdgeLetters","reapetedCornerLetters","stickerField","includes","alert","setTimeout","ExportConfig","exportText","showFailure","setShowFailure","readOnly","height","copyText","select","setSelectionRange","navigator","clipboard","writeText","element","createElement","downloadText","setAttribute","encodeURIComponent","body","appendChild","click","Home","ImportConfig","config","configFile","files","console","log","fr","FileReader","onload","result","readAsText","Sidebar","width","exact","Test","setMoves","validComm","setValidComm","Train","AppRouter","path","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.1033ab0f.chunk.js","sourcesContent":["export const stickers = ['UBL','UB','UBR','UL','U','UR','UFL','UF','UFR','LUB','LU','LUF','FUL','FU','FUR','RUF','RU','RUB','BUR','BU','BUL','LB','L','LF','FL','F','FR','RF','R','RB','BR','B','BL','LDB','LD','LDF','FDL','FD','FDR','RDF','RD','RDB','BDR','BD','BDL','DFL','DF','DFR','DL','D','DR','DBL','DB','DBR'];\r\n\r\nexport const cornersRotations = ['ULB', 'UBR', 'URF', 'UFL', 'DLF', 'DFR', 'DRB', 'DBL'];","import { stickers, cornersRotations } from '../helpers/stickers';\r\nimport Cubejs from 'cubejs';\r\n\r\nexport const notSamePiece = (sticker1, sticker2) => {\r\n    return sticker1.split('').sort().join('') !== sticker2.split('').sort().join('');\r\n}\r\n\r\n/*export const notSamePieceByLetter = (sticker1, sticker2, type) => {\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    //console.log(sticker1, Object.keys(letterScheme).find(key => letterScheme[key] === sticker1), sticker2, Object.keys(letterScheme).find(key => letterScheme[key] === sticker2), notSamePieceByName(Object.keys(letterScheme).find(key => letterScheme[key] === sticker1), Object.keys(letterScheme).find(key => letterScheme[key] === sticker2)));\r\n    return notSamePieceByName(\r\n        Object.keys(letterScheme).filter(key => key.length === type).find(key => letterScheme[key] === sticker1),\r\n        Object.keys(letterScheme).filter(key => key.length === type).find(key => letterScheme[key] === sticker2)\r\n        );\r\n}*/\r\n\r\nexport const getTargets = (pieceType) => {\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n\r\n    if (!letterScheme) {\r\n        return false;\r\n    }\r\n\r\n    let stickerCount = 0;\r\n    if (pieceType === 'edge') {\r\n        stickerCount = 2;\r\n    } else if (pieceType === 'corner') {\r\n        stickerCount = 3;\r\n    }\r\n    \r\n    return stickers.filter(sticker => (sticker.length === stickerCount && notSamePiece(sticker, letterScheme[`${pieceType}Buffer`]))).sort((firstEl, secondEl) => (letterScheme[firstEl].localeCompare(letterScheme[secondEl])));\r\n}\r\n\r\n\r\nexport const generatePairs = (targets) => {\r\n    //console.log(\"generating pairs\");\r\n    let pairs = [];\r\n    targets.forEach(target1 => {\r\n        targets.forEach(target2 => {\r\n            if (notSamePiece(target1, target2)) {\r\n                //console.log(target1.concat(target2), pairs.includes(target1.concat(target2)));\r\n                if ((document.getElementById(\"starting\").checked && document.getElementById(target1).checked) || (document.getElementById(\"ending\").checked && document.getElementById(target2).checked)) {\r\n                    pairs.push([target1, target2]);\r\n                }\r\n            }\r\n        });\r\n    });\r\n    //console.log(pairs);\r\n    return pairs.sort(() => (Math.random() - 0.5));\r\n}\r\n\r\nexport const translatePair = (pair) => {\r\n    // Translate from [XYZ, XYZ] to 'AB'\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    return letterScheme[pair[0]].concat(letterScheme[pair[1]]);\r\n}\r\n\r\nexport const performCycle = (cycle) => {\r\n    const [t1, t2, t3] = cycle;\r\n    let cubejsStickers = [];\r\n    [\"U\", \"R\", \"F\", \"D\", \"L\", \"B\"].forEach((face) => {\r\n        cubejsStickers.push(...stickers.filter((sticker) => (sticker[0]===face)))\r\n    });\r\n\r\n    if (t1.length===2) {    // Edge cycle\r\n        const [ot1, ot2, ot3] = cycle.map((piece) => {\r\n          return `${piece[1]}${piece[0]}`\r\n        });\r\n\r\n        const t1Index = cubejsStickers.indexOf(t1);\r\n        const t2Index = cubejsStickers.indexOf(t2);\r\n        const t3Index = cubejsStickers.indexOf(t3);\r\n        const ot1Index = cubejsStickers.indexOf(ot1);\r\n        const ot2Index = cubejsStickers.indexOf(ot2);\r\n        const ot3Index = cubejsStickers.indexOf(ot3);\r\n\r\n        let buff = t1;\r\n        cubejsStickers[t1Index] = t2;\r\n        cubejsStickers[t2Index] = t3;\r\n        cubejsStickers[t3Index] = buff;\r\n        buff = ot1;\r\n        cubejsStickers[ot1Index] = ot2;\r\n        cubejsStickers[ot2Index] = ot3;\r\n        cubejsStickers[ot3Index] = buff;\r\n\r\n        return cubejsStickers.map((sticker) => (sticker[0])).join(\"\");\r\n    } else if (t1.length===3) { // Corner cycle\r\n        const [cwt1, cwt2, cwt3] = cycle.map((piece) => {\r\n            // encontrar el sticker horario\r\n                // encontrar el sentido\r\n            const rotation = cornersRotations.find((rotation) => (!notSamePiece(rotation, piece)));\r\n                // ubicar la siguiente en ese sentido (la que viene despues de piece[0])\r\n            const nextFace = rotation[(rotation.indexOf(piece[0])+1)%3];\r\n            // encontrar la pieza con el formato correcto\r\n            return stickers.find((sticker) => (sticker[0]===nextFace && !notSamePiece(sticker, piece)));\r\n        });\r\n        const [acwt1, acwt2, acwt3] = cycle.map((piece) => {\r\n            // encontrar el sticker horario\r\n                // encontrar el sentido\r\n            const rotation = cornersRotations.find((rotation) => (!notSamePiece(rotation, piece)));\r\n                // ubicar la siguiente en ese sentido (la que viene despues de piece[0])\r\n            const nextFace = rotation[(rotation.indexOf(piece[0])+2)%3];\r\n            // encontrar la pieza con el formato correcto\r\n            return stickers.find((sticker) => (sticker[0]===nextFace && !notSamePiece(sticker, piece)));\r\n        });\r\n\r\n        const t1Index = cubejsStickers.indexOf(t1);\r\n        const t2Index = cubejsStickers.indexOf(t2);\r\n        const t3Index = cubejsStickers.indexOf(t3);\r\n        const cwt1Index = cubejsStickers.indexOf(cwt1);\r\n        const cwt2Index = cubejsStickers.indexOf(cwt2);\r\n        const cwt3Index = cubejsStickers.indexOf(cwt3);\r\n        const acwt1Index = cubejsStickers.indexOf(acwt1);\r\n        const acwt2Index = cubejsStickers.indexOf(acwt2);\r\n        const acwt3Index = cubejsStickers.indexOf(acwt3);\r\n\r\n        let buff = t1;\r\n        cubejsStickers[t1Index] = t2;\r\n        cubejsStickers[t2Index] = t3;\r\n        cubejsStickers[t3Index] = buff;\r\n        buff = cwt1;\r\n        cubejsStickers[cwt1Index] = cwt2;\r\n        cubejsStickers[cwt2Index] = cwt3;\r\n        cubejsStickers[cwt3Index] = buff;\r\n        buff = acwt1;\r\n        cubejsStickers[acwt1Index] = acwt2;\r\n        cubejsStickers[acwt2Index] = acwt3;\r\n        cubejsStickers[acwt3Index] = buff;\r\n        \r\n        return cubejsStickers.map((sticker) => (sticker[0])).join(\"\");\r\n    }\r\n}\r\n\r\nexport const validateComm = (comm, alg) => {\r\n    try {\r\n        const parsedAlg = Scramble.parse(alg);\r\n        const cubejs = new Cubejs(Cubejs.fromString(performCycle(comm)));\r\n        cubejs.move(parsedAlg);\r\n        return cubejs.isSolved();\r\n    } catch {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport class Scramble {\r\n    static parse (scramble) {\r\n      const parseModifiers = function (modifiersString) {\r\n        let modifiers = []\r\n        let suffix = modifiersString\r\n        while (true) {\r\n          let modifier = ''\r\n          if (suffix[0] === \"'\") modifier = \"'\"\r\n          else {\r\n            modifier = suffix.match(/^[0-9]+/)\r\n            if (modifier === null) modifier = ''\r\n            else modifier = modifier[0]\r\n          }\r\n          if (modifier.length === 0) break\r\n          modifiers.push(modifier)\r\n          suffix = suffix.substring(modifier.length)\r\n        }\r\n        return modifiers\r\n      }\r\n      // parsing commutators and conjugates\r\n      const parseSpecial = function (scramble) {\r\n        const info = Scramble._special(scramble)\r\n        const left = Scramble._joinTokens(info.leftTokens)\r\n        const right = Scramble._joinTokens(info.rightTokens)\r\n        if (info.type === ',') return [left, right, Scramble.inverse(left), Scramble.inverse(right)].join(' ')\r\n        else if (info.type === ':') return [left, right, Scramble.inverse(left)].join(' ')\r\n        else return left\r\n      }\r\n      const applyModifiers = function (token) {\r\n        const modifiers = parseModifiers(token.modifiers)\r\n        let moves = token.moves\r\n        if ('({'.indexOf(moves[0]) !== -1) moves = Scramble.parse(moves.substring(1, moves.length - 1))\r\n        else if ('['.indexOf(moves[0]) !== -1) {\r\n          moves = Scramble.parse(parseSpecial(moves))\r\n        }\r\n        for (const i in modifiers) {\r\n          const modifier = modifiers[i]\r\n          if (modifier === \"'\") moves = Scramble.inverse(moves)\r\n          else {\r\n            const number = parseInt(modifier)\r\n            moves = Array(number).fill(moves).join(' ')\r\n          }\r\n        }\r\n        return moves\r\n      }\r\n      const tokens = Scramble._tokenize(scramble).map(token => applyModifiers(token))\r\n      return tokens.join(' ')\r\n    }\r\n    static inverse (scramble) {\r\n      // invert commutators and conjugates\r\n      const inverseSpecial = function (scramble) {\r\n        const info = Scramble._special(scramble)\r\n        if (info.type === ',') return '[' + Scramble._joinTokens(info.rightTokens) + ', ' + Scramble._joinTokens(info.leftTokens) + ']'\r\n        else if (info.type === ':') return '[' + Scramble._joinTokens(info.leftTokens) + ': ' + Scramble.inverse(Scramble._joinTokens(info.rightTokens)) + ']'\r\n        return scramble\r\n      }\r\n      const inverseToken = function (token) {\r\n        let modifiers = token.modifiers\r\n        if (modifiers.length !== 0 && modifiers[modifiers.length - 1] === \"'\") {\r\n          modifiers = modifiers.substring(0, modifiers.length - 1)\r\n          return token.moves + modifiers\r\n        }\r\n        if (token.moves[0] === '[') token.moves = inverseSpecial(token.moves)\r\n        else modifiers += \"'\"\r\n        return token.moves + modifiers\r\n      }\r\n      return Scramble._tokenize(scramble).map(token => inverseToken(token)).reverse().join(' ')\r\n    }\r\n    static _tokenize (scramble) {\r\n      const firstToken = function (scramble) {\r\n        const firstMove = scramble.match(/^[A-Za-z]+[0-9']*/)\r\n        if (firstMove !== null) {\r\n          const moves = firstMove[0].match(/[A-Za-z]+/)[0]\r\n          const suffix = scramble.substring(moves.length)\r\n          let modifiers = suffix.match(/^[0-9']+/)\r\n          if (modifiers === null) modifiers = ''\r\n          else modifiers = modifiers[0]\r\n          return {\r\n            moves,\r\n            modifiers\r\n          }\r\n        }\r\n        const groups = '()[]{}'\r\n        let groupsCount = [0, 0, 0]\r\n        for (const i in scramble) {\r\n          const index = groups.indexOf(scramble[i])\r\n          if (index >= 0) {\r\n            const group = Math.floor(index / 2)\r\n            if (index % 2) groupsCount[group]--\r\n            else groupsCount[group]++\r\n          }\r\n          let isOk = true\r\n          for (const group in groupsCount) {\r\n            isOk = isOk && (groupsCount[group] === 0)\r\n          }\r\n          if (isOk) {\r\n            const moves = scramble.substring(0, parseInt(i) + 1)\r\n            const suffix = scramble.substring(parseInt(i) + 1)\r\n            let modifiers = suffix.match(/^[0-9']+/)\r\n            if (modifiers === null) modifiers = ''\r\n            else modifiers = modifiers[0]\r\n            return {\r\n              moves,\r\n              modifiers\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n      let tokens = []\r\n      let suffix = scramble\r\n      while (true) {\r\n        const beginToken = suffix.match(/[A-Za-z[({]/)\r\n        if (beginToken === null) break\r\n        const index = beginToken.index\r\n        const token = firstToken(suffix.substring(index))\r\n        if (token === null) break\r\n        tokens.push(token)\r\n        suffix = suffix.substring(index + token.moves.length)\r\n      }\r\n      return tokens\r\n    }\r\n    static _joinTokens (tokens) {\r\n      return tokens.map(token => token.moves + token.modifiers).join(' ')\r\n    }\r\n    // get more information about commutator or conjugate\r\n    static _special (scramble) {\r\n      if (scramble[0] !== '[' || scramble[scramble.length - 1] !== ']') return null\r\n      scramble = scramble.substring(1, scramble.length - 1).trim()\r\n      const tokens = Scramble._tokenize(scramble)\r\n      let info = {\r\n        leftTokens: [],\r\n        rightTokens: [],\r\n        type: ''\r\n      }\r\n      for (const i in tokens) {\r\n        if (',:'.indexOf(scramble[0]) !== -1) {\r\n          info.type = scramble[0]\r\n          scramble = scramble.substring(1).trim()\r\n        }\r\n        const token = tokens[i]\r\n        if (info.type === '') info.leftTokens.push(token)\r\n        else info.rightTokens.push(token)\r\n        scramble = scramble.replace(token.moves + token.modifiers, '').trim()\r\n      }\r\n      return info\r\n    }\r\n  }","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTargets, notSamePiece, translatePair, validateComm } from '../helpers/cubeLogic';\r\n\r\nexport const CommsConfig = ({pieceType}) => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    let comms = JSON.parse(localStorage.getItem(\"comms\"))||{};\r\n\r\n    const targets = getTargets(pieceType);\r\n    const [firstTarget, setFirstTarget] = useState('');\r\n    \r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n\r\n    if (!targets) {\r\n        return (\r\n            <>\r\n                <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                    {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n                </h1>\r\n                <Link to=\"/config\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n\r\n                <div className=\"alert alert-warning alert-dismissible m-2\" role=\"alert\">\r\n                    Looks like you don't have a letter scheme, do you want to <Link to=\"/config/letter_scheme\">make one</Link>?\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const buffer = letterScheme[`${pieceType}Buffer`];\r\n    const secondTargets = targets.filter(secondTarget => (notSamePiece(firstTarget, secondTarget)));\r\n\r\n    const selectTarget = (e) => {\r\n        setFirstTarget(e.target.name);\r\n        setShowSuccess(false);\r\n    }\r\n    \r\n\r\n    const back = () => {\r\n        setFirstTarget(\"\");\r\n    }\r\n\r\n    const save = () => {\r\n        secondTargets.forEach(secondTarget => {\r\n            const commField = document.getElementById(secondTarget);\r\n            if (commField.value) {\r\n                comms[`${firstTarget}-${secondTarget}`] = commField.value;\r\n            }\r\n        });\r\n        \r\n        localStorage.setItem('comms',JSON.stringify(comms));\r\n        setShowSuccess(true);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const alg = e.target.value;\r\n        const secondTarget = e.target.id\r\n        const validAlg = validateComm([buffer, firstTarget, secondTarget], alg);\r\n        e.target.className = `form-control ${alg&&(validAlg?'is-valid':'is-invalid')}`;\r\n        setShowSuccess(false);\r\n    }\r\n    \r\n    const targetStatus = (target) => {\r\n        const secondTargets = targets.filter(secondTarget => (notSamePiece(target, secondTarget)));\r\n        const completed = secondTargets.reduce((completed, secondTarget) => (\r\n            completed && !!comms[`${target}-${secondTarget}`]\r\n        ), true);\r\n        const allCorrect = secondTargets.reduce((correct, secondTarget) => {\r\n            const alg = comms[`${target}-${secondTarget}`];\r\n            if (alg) {\r\n                return correct && validateComm([buffer, target, secondTarget], alg);\r\n            } else {\r\n                return correct;\r\n            }\r\n        }, true);\r\n\r\n        if (allCorrect) {\r\n            return completed?'primary':'secondary';\r\n        } else {\r\n            return 'danger';\r\n        }\r\n    }    \r\n\r\n    return (\r\n        <>\r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n            </h1>\r\n\r\n            {firstTarget?<>\r\n                <button className=\"btn btn-primary back\" onClick={back}>\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n                <div style={{columnCount: 2}}>\r\n                    {secondTargets.map(secondTarget => (\r\n                        <div key={secondTarget} className='mx-3 row'>\r\n                            <label htmlFor={secondTarget} className='col-1 col-form-label'>\r\n                                {translatePair([firstTarget, secondTarget])}:\r\n                            </label>\r\n                            <div className='col-10'>\r\n                                <input\r\n                                    type = \"text\"\r\n                                    className = {`form-control ${comms[`${firstTarget}-${secondTarget}`]&&(validateComm([buffer, firstTarget, secondTarget], comms[`${firstTarget}-${secondTarget}`])?'is-valid':'is-invalid')}`}\r\n                                    key = {secondTarget}\r\n                                    id = {secondTarget}\r\n                                    onChange = {handleChange}\r\n                                    defaultValue = {comms[`${firstTarget}-${secondTarget}`]}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button className='btn btn-primary btn-lg mt-3' onClick={save}>\r\n                    Save\r\n                </button>\r\n                {showSuccess && \r\n                    <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                        Comms saved.\r\n                    </div>\r\n                }\r\n            </>:<>\r\n                <Link to=\"/config\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n                <br/>\r\n                {targets.map(target => (\r\n                    <button key={target} name={target} className={`btn btn-${targetStatus(target)} btn-lg m-2`} onClick={selectTarget}>\r\n                        {letterScheme[target]}\r\n                    </button>\r\n                ))}\r\n            </>}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport useKeypress from 'react-use-keypress';\r\n\r\nimport { useStopwatch } from '../hooks/useStopwatch';\r\nimport { translatePair } from '../helpers/cubeLogic';\r\n\r\nexport const CommsPractice = ({practiceTargets, timerEnabled, controlType}) => {\r\n\r\n    const comms = JSON.parse(localStorage.getItem(\"comms\"))||{};\r\n\r\n    const [commPos, setCommPos] = useState(0);\r\n    const [times, setTimes] = useState({});\r\n    \r\n    const {\r\n        time,\r\n        startTime,\r\n        stopTime,\r\n        restartTime,\r\n        isRunning\r\n      } = useStopwatch();\r\n\r\n    useEffect(() => {\r\n    if (!timerEnabled) {\r\n        stopTime();\r\n    }\r\n    }, [timerEnabled, stopTime]);\r\n  \r\n    \r\n    const nextComm = () => {\r\n        setCommPos(Math.min(commPos+1, practiceTargets.length));\r\n        if (timerEnabled && commPos+1 < practiceTargets.length) {\r\n            restartTime();\r\n            startTime();\r\n        }\r\n    }\r\n\r\n    const previousComm = () => {\r\n        setCommPos(Math.max(commPos-1, 0));\r\n    }\r\n    \r\n    const handleTimer = () => {\r\n        if (isRunning && timerEnabled) {\r\n            stopTime();\r\n            let tempTimes = {...times};\r\n            tempTimes[translatePair(practiceTargets[commPos])] = time\r\n            setTimes(tempTimes);\r\n        } else {\r\n            nextComm();\r\n        }\r\n    }\r\n    \r\n    \r\n    const retry = () => {\r\n        practiceTargets.sort(() => (Math.random() - 0.5));\r\n        setCommPos(0);\r\n        restartTime();\r\n        startTime();\r\n    }\r\n\r\n    const sum = (times) => {\r\n        return Object.values(times).reduce((sum, num) => (sum+num), 0);\r\n    }\r\n\r\n    const calcMean = useCallback((times) => {\r\n        return Math.round(sum(times)/Object.values(times).length);\r\n    }, []);\r\n    const mean = useMemo(() => calcMean(times), [calcMean, times]);\r\n    \r\n    const calcDev = useCallback((times) => {\r\n        return Math.round(Math.sqrt(Object.values(times).map(t => ((t-mean)**2)).reduce((sum, num) => (sum+num), 0)/Object.values(times).length));\r\n    }, [mean]);\r\n    const dev = useMemo(() => calcDev(times), [calcDev, times]);\r\n    \r\n    const evaluateTime = (time) => {\r\n        if (time > mean + dev) {\r\n            return 'red';\r\n        }\r\n        if (time < mean - dev) {\r\n            return 'green';\r\n        }\r\n        return 'blue';\r\n    };\r\n    \r\n    \r\n    useKeypress(\" \", () => {controlType===\"keyboard\" && handleTimer()});\r\n    useKeypress(\"ArrowRight\", () => {controlType===\"keyboard\" && nextComm()});\r\n    useKeypress(\"ArrowLeft\", () => {controlType===\"keyboard\" && previousComm()});\r\n\r\n    //const [debug, setDebug] = useState('debug')\r\n\r\n    return (<>\r\n        <div onTouchStart={() => {controlType===\"touch\" && nextComm()}}>\r\n            {commPos < practiceTargets.length?\r\n                <>\r\n                <h1 className='position-relative'>\r\n                    {translatePair(practiceTargets[commPos])}\r\n                    <button\r\n                        className='reminder position-absolute top-0 btn btn-dark btn-sm mx-1'\r\n                        title={comms[practiceTargets[commPos].join(\"-\")]||'no comm'}\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#reminderModal\"\r\n                    >\r\n                        ?\r\n                    </button>\r\n                </h1>\r\n\r\n                {timerEnabled && <h3>{time}</h3>}\r\n\r\n                <h5>\r\n                    {`${commPos+1}/${practiceTargets.length}`}\r\n                </h5>\r\n\r\n                {controlType===\"buttons\" && <>\r\n                    <button className='btn btn-primary btn-lg' onClick={previousComm}>Prev comm</button>\r\n                    {timerEnabled && <button className='btn btn-primary btn-lg' onClick={handleTimer}>{isRunning?'Stop':'Start'} timer</button>}\r\n                    <button className='btn btn-primary btn-lg' onClick={nextComm}>Next comm</button>\r\n                </>}\r\n                <div className=\"modal fade\" id=\"reminderModal\" tabIndex=\"-1\" aria-labelledby=\"reminderModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">{translatePair(practiceTargets[commPos])}</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {comms[practiceTargets[commPos].join(\"-\")]||'no comm'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </>\r\n            :\r\n                <>\r\n                <h2>Done!</h2>\r\n                <button className='btn btn-primary' onClick={retry} autoFocus>\r\n                    Retry?\r\n                </button>\r\n\r\n                {timerEnabled && <>\r\n                    <h5>Total: {sum(times)} Mean: {calcMean(times)} Deviation: {calcDev(times)}</h5>\r\n\r\n                    <div style={{columnCount: 5}}>\r\n                        {practiceTargets.sort((pair1, pair2) => (times[translatePair(pair2)]-times[translatePair(pair1)])).map(pair => (\r\n                            <div key={translatePair(pair)} style={{color: evaluateTime(times[translatePair(pair)])}}>\r\n                                {`${translatePair(pair)} ${times[translatePair(pair)]}`}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>}\r\n                </>\r\n            }\r\n        </div>\r\n\r\n    </>)\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useStopwatch = () => {\r\n\r\n    const [time, setTime] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n      \r\n        if (isRunning) {\r\n            interval = setInterval(() => {\r\n                setTime((time) => time + 10);\r\n            }, 10);\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n      }, [isRunning]);\r\n\r\n    const startTime = () => {\r\n        setIsRunning(true);\r\n    }\r\n\r\n    const stopTime = () => {\r\n        setIsRunning(false);\r\n    }\r\n\r\n    const restartTime = () => {\r\n        setTime(0);\r\n    }\r\n    \r\n    \r\n    return {\r\n        time,\r\n        isRunning,\r\n        startTime,\r\n        stopTime,\r\n        restartTime\r\n    };\r\n    \r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTargets, generatePairs } from '../helpers/cubeLogic';\r\nimport { CommsPractice } from './CommsPractice';\r\n\r\nexport const CommsTrainer = ({pieceType}) => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n    \r\n    const [practiceTargets, setPracticeTargets] = useState([]);\r\n    //const [timerEnabled, settimerEnabled] = useState(false);\r\n\r\n    const targets = getTargets(pieceType);\r\n    \r\n    if (!targets) {\r\n        return (\r\n            <>\r\n                <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                    {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n                </h1>\r\n                <Link to=\"/train\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n\r\n                <div className=\"alert alert-warning alert-dismissible m-2\" role=\"alert\">\r\n                    Looks like you don't have a letter scheme, do you want to <Link to=\"/config/letter_scheme\">make one</Link>?\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const back = () => {\r\n        setPracticeTargets([]);\r\n    }\r\n\r\n    const toggleAll = () => {\r\n        const allCheckbox = document.getElementById(\"All\");\r\n        targets.forEach(target => document.getElementById(target).checked = allCheckbox.checked);\r\n    }\r\n\r\n    const go = () => {\r\n        setPracticeTargets(generatePairs(targets));\r\n    }\r\n\r\n    const controlType = () => {\r\n        let controlSelected = ''\r\n        document.getElementsByName(\"controls\").forEach( radioButton => {\r\n            if (radioButton.checked) {\r\n                controlSelected = radioButton.value;\r\n            }\r\n        });\r\n        return controlSelected;\r\n    }    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                {pieceType[0].toUpperCase() + pieceType.substring(1)} comms\r\n            </h1>\r\n\r\n            {practiceTargets.length?\r\n                <>\r\n                <button className=\"btn btn-primary back\" onClick={back}>\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n                <CommsPractice practiceTargets={practiceTargets} timerEnabled={document.getElementById('timer').checked} controlType={controlType()}/>\r\n                </>\r\n            :\r\n                <>\r\n                <Link to=\"/train\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n                \r\n                <div style={{columnCount: 4, textAlign: 'left', marginLeft: 40}}>\r\n                    <div>\r\n                        <input\r\n                            type = \"checkbox\"\r\n                            id = \"starting\"\r\n                            value = \"starting\"\r\n                        />\r\n                        <label htmlFor='starting'>Starting with</label><br/>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type = \"checkbox\"\r\n                            id = \"ending\"\r\n                            value = \"ending\"\r\n                        />\r\n                        <label htmlFor='ending'>Ending with :</label><br/>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n\r\n                <div style={{columnCount: 4, textAlign: 'left', marginLeft: 40}}>\r\n                    <div key = \"All\">\r\n                        <input\r\n                            type = \"checkbox\"\r\n                            id = \"All\"\r\n                            value = \"All\"\r\n                            onClick = {toggleAll}\r\n                        />\r\n                        <label htmlFor='All'>All</label><br/>\r\n                    </div>\r\n                    {targets.map(target => (\r\n                        <div key = {target} >\r\n                            <input\r\n                                type = \"checkbox\"\r\n                                id = {target}\r\n                                value = {target}\r\n                            />\r\n                            <label htmlFor={target}>{letterScheme[target]}</label><br/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <br />\r\n                <div style={{textAlign: 'left', marginLeft: 40}}>\r\n                    <input\r\n                        type='checkbox'\r\n                        id='timer'\r\n                    />\r\n                    <label htmlFor='timer'>Timer</label>\r\n                </div>\r\n\r\n                <br />\r\n                <div style={{columnCount: 4, textAlign: 'left', marginLeft: 40}}>\r\n                    <p>Controls:</p>\r\n\r\n                    <div>\r\n                        <input type=\"radio\" id='keyboard' name='controls' value=\"keyboard\" defaultChecked/>\r\n                        <label htmlFor='keyboard'>Keyboard</label>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <input type=\"radio\" id=\"touch\" name='controls' value=\"touch\"/>\r\n                        <label htmlFor='touch'>Touch</label>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <input type=\"radio\" id='buttons' name='controls' value=\"buttons\"/>\r\n                        <label htmlFor='buttons'>Buttons</label>\r\n                    </div>\r\n                </div>\r\n                \r\n                <button className=\"btn btn-primary btn-lg mt-3\" onClick={go}>\r\n                    Go\r\n                </button>\r\n\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Config = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                Config\r\n            </h1>\r\n            <Link to=\"/config/letter_scheme\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Letter scheme\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/edge_comms\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Edge comms\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/corner_comms\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Corner comms\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/export_config\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-download\"></i> Export config\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config/import_config\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-upload\"></i> Import config\r\n                </button>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { stickers } from '../helpers/stickers';\r\nimport '../styles/cubeLayout.css';\r\n\r\nexport const CubeLayout = () => {\r\n\r\n    const letterScheme = JSON.parse(localStorage.getItem(\"letterScheme\"));\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [isMounted, setIsMounted] = useState(true);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsMounted(false);\r\n        }\r\n    }, []);\r\n\r\n    const save = () => {\r\n        let errors = [];\r\n        let letterScheme = {};\r\n\r\n        // check for edge buffer\r\n        let edgeBuffer = '';\r\n        document.getElementsByName(\"edge-buffer\").forEach( stickerRadio => {\r\n            if (stickerRadio.checked) {\r\n                edgeBuffer = stickerRadio.value;\r\n                letterScheme['edgeBuffer'] = edgeBuffer;\r\n            }\r\n        });\r\n        if (!edgeBuffer) {errors.push('Must select edge buffer');}\r\n\r\n        // check for corner buffer\r\n        let cornerBuffer = '';\r\n        document.getElementsByName(\"corner-buffer\").forEach( stickerRadio => {\r\n            if (stickerRadio.checked) {\r\n                cornerBuffer = stickerRadio.value\r\n                letterScheme['cornerBuffer'] = cornerBuffer;\r\n            }\r\n        });\r\n        if (!cornerBuffer) {errors.push('Must select corner buffer');}\r\n\r\n        // check all sticker letters\r\n        let allAsigned = '';\r\n        let asignedEdges = [];\r\n        let asignedCorners = [];\r\n        let repeatedEdgeError = '';\r\n        let repeatedCornerError = '';\r\n        let reapetedEdgeLetters = [];\r\n        let reapetedCornerLetters = [];\r\n        stickers.filter( sticker => sticker.length > 1).forEach( sticker => {\r\n            const stickerField = document.getElementById(sticker);\r\n            letterScheme[sticker] = stickerField.value;\r\n            if (!stickerField.value) {\r\n                allAsigned = 'Must asign all letters';\r\n                stickerField.className = `form-control sticker-textfield error`\r\n            } else {\r\n                stickerField.className = `form-control sticker-textfield`\r\n                if (sticker.length === 2) {\r\n                    if (asignedEdges.includes(stickerField.value)) {\r\n                        reapetedEdgeLetters.push(stickerField.value);\r\n                        repeatedEdgeError = 'There are edges with the same letter'\r\n                    }\r\n                    asignedEdges.push(stickerField.value);\r\n                } else if (sticker.length === 3) {\r\n                    if (asignedCorners.includes(stickerField.value)) {\r\n                        reapetedCornerLetters.push(stickerField.value);\r\n                        repeatedCornerError = 'There are corners with the same letter'\r\n                    }\r\n                    asignedCorners.push(stickerField.value);\r\n                }\r\n            }\r\n        });\r\n        stickers.forEach( sticker => {\r\n            const stickerField = document.getElementById(sticker);\r\n            if (sticker.length === 2) {\r\n                if (reapetedEdgeLetters.includes(stickerField.value)) {\r\n                    stickerField.className = `form-control sticker-textfield error`\r\n                }\r\n            } else if (sticker.length === 3) {\r\n                if (reapetedCornerLetters.includes(stickerField.value)) {\r\n                    stickerField.className = `form-control sticker-textfield error`\r\n                }\r\n            }\r\n        });\r\n        if (allAsigned) {errors.push(allAsigned);}\r\n        if (repeatedEdgeError) {errors.push(repeatedEdgeError);}\r\n        if (repeatedCornerError) {errors.push(repeatedCornerError);}\r\n\r\n        // check errors\r\n        if (errors.length) {\r\n            alert(errors.join(\"\\n\"));\r\n        } else {\r\n            localStorage.setItem('letterScheme',JSON.stringify(letterScheme));\r\n            setShowSuccess(true);\r\n            setTimeout(() => {\r\n                if (isMounted) {\r\n                    setShowSuccess(false)\r\n                }\r\n            }, 3500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1 className='m-2' style={{display: 'inline-block'}}>\r\n                    Letter scheme\r\n                </h1>\r\n                <Link to=\"/config\">\r\n                    <button className=\"btn btn-primary back\">\r\n                        <i className=\"fa fa-arrow-left\"></i> Back\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"grid-container\">\r\n                {\r\n                    stickers.map( sticker => (\r\n                        <div className={`grid-item ${sticker}`} key={sticker}>\r\n                            <input\r\n                                type = \"text\"\r\n                                className = 'form-control sticker-textfield'\r\n                                disabled = {sticker.length === 1}\r\n                                maxLength = \"1\"\r\n                                key = {sticker}\r\n                                id = {sticker}\r\n                                placeholder = {sticker}\r\n                                defaultValue = {letterScheme && letterScheme[sticker]}\r\n                            />\r\n                            {sticker.length === 1||\r\n                                <input\r\n                                    type = \"radio\"\r\n                                    className = \"sticker-buffer\"\r\n                                    name = {sticker.length === 2?'edge-buffer':'corner-buffer'}\r\n                                    value = {sticker}\r\n                                    defaultChecked = {letterScheme && (sticker === letterScheme.edgeBuffer || sticker === letterScheme.cornerBuffer)}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    ) )\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg mt-3\" onClick={save}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n\r\n            {showSuccess && \r\n                <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                    Letter scheme saved.\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ExportConfig = () => {\r\n\r\n    const letterScheme = localStorage.getItem(\"letterScheme\");\r\n    const comms = localStorage.getItem(\"comms\");\r\n    \r\n    const exportText = {letterScheme, comms};\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [showFailure, setShowFailure] = useState(false);\r\n\r\n    const copy = () => {\r\n        const copyText = document.getElementById(\"export\");\r\n\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n      \r\n        try {\r\n            navigator.clipboard.writeText(copyText.value);\r\n            setShowSuccess(true);\r\n        } catch {\r\n            setShowFailure(true);\r\n        }\r\n    };\r\n\r\n    const download = () => {\r\n        let element = document.createElement('a');\r\n        const downloadText = document.getElementById(\"export\").value;\r\n        element.setAttribute('href','data:text/plain;charset=utf-8, ' + encodeURIComponent(downloadText));\r\n        element.setAttribute('download', 'comms-trainer-config.txt');\r\n        document.body.appendChild(element);\r\n        element.click();\r\n    };\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                Export config\r\n            </h1>\r\n            <Link to=\"/config\">\r\n                <button className=\"btn btn-primary back\">\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n            </Link>\r\n\r\n            <div className='m-3'>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    id=\"export\"\r\n                    readOnly\r\n                    value={JSON.stringify(exportText)}\r\n                    style={{height: \"20em\"}}\r\n                ></textarea>\r\n            </div>\r\n\r\n            <button className='btn btn-primary' title='Copy to clipboard' onClick={copy}>Copy</button>\r\n            <span className='mx-2'>or</span>\r\n            <button className='btn btn-primary' title='Download export file' onClick={download}>Download</button>\r\n\r\n            {showSuccess && \r\n                <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                    Text copied.\r\n                </div>\r\n            }\r\n\r\n            {showFailure && \r\n                <div className=\"alert alert-danger m-2\" role=\"alert\">\r\n                    Could not copy.\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                Home\r\n            </h1>\r\n            <Link to=\"/train\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Train\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/config\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-cog\"></i> Config\r\n                </button>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ImportConfig = () => {\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [showFailure, setShowFailure] = useState(false);\r\n\r\n    const importConfig = () => {\r\n        try {\r\n            const config = document.getElementById(\"import\").value;\r\n            const {letterScheme, comms} = JSON.parse(config);\r\n            \r\n            localStorage.setItem('letterScheme', letterScheme);\r\n            localStorage.setItem('comms', comms);\r\n\r\n            setShowFailure(false);\r\n            setShowSuccess(true);\r\n        } catch {\r\n            setShowSuccess(false);\r\n            setShowFailure(true);\r\n        }\r\n    }\r\n\r\n    const upload = () => {\r\n        try {\r\n            const configFile = document.getElementById(\"configFile\").files[0];\r\n            console.log(configFile);\r\n    \r\n            const fr = new FileReader();\r\n            fr.onload = () => {\r\n                const {letterScheme, comms} = JSON.parse(fr.result);\r\n            \r\n                localStorage.setItem('letterScheme', letterScheme);\r\n                localStorage.setItem('comms', comms);\r\n    \r\n                setShowFailure(false);\r\n                setShowSuccess(true);\r\n            };\r\n            fr.readAsText(configFile);\r\n        } catch {\r\n            setShowSuccess(false);\r\n            setShowFailure(true);\r\n        }\r\n    }    \r\n    \r\n    return (\r\n        <>\r\n            <h1 className='m-4' style={{display: 'inline-block'}}>\r\n                Import config\r\n            </h1>\r\n            <Link to=\"/config\">\r\n                <button className=\"btn btn-primary back\">\r\n                    <i className=\"fa fa-arrow-left\"></i> Back\r\n                </button>\r\n            </Link>\r\n\r\n            <div className='m-3'>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    id=\"import\"\r\n                    style={{height: \"17em\"}}\r\n                ></textarea>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={importConfig}>Import</button>\r\n            \r\n            <p>or</p>\r\n\r\n            <div className='m-3'>\r\n                <input type=\"file\" id='configFile' className='form-control' />\r\n            </div>\r\n            <button className='btn btn-primary' onClick={upload}>Upload</button>\r\n\r\n            {showSuccess && \r\n                <div className=\"alert alert-success m-2\" role=\"alert\">\r\n                    Imported.\r\n                </div>\r\n            }\r\n\r\n            {showFailure && \r\n                <div className=\"alert alert-danger m-2\" role=\"alert\">\r\n                    Could not import.\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport '../styles/sidebar.css';\r\n\r\nexport const Sidebar = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column flex-shrink-0 bg-light vh-100\" style={{width: '100px'}}>\r\n\r\n            <ul className=\"nav nav-pills nav-flush flex-column mb-auto text-center\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink exact to=\"/\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-home\"></i>\r\n                        <small>Home</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to=\"/train\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-brain\"></i>\r\n                        <small>Train</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to=\"/config\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-cog\"></i>\r\n                        <small>Config</small>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                {/*<li>\r\n                    <NavLink to=\"/test\" className=\"nav-link py-3 border-bottom\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                        <small>Tests</small>\r\n                    </NavLink>\r\n                </li>*/}\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { performCycle, validateComm } from '../helpers/cubeLogic';\r\n\r\nexport const Test = () => {\r\n\r\n\r\n    const [moves, setMoves] = useState(\"\");\r\n    const [validComm, setValidComm] = useState(false);\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setMoves(e.target.value);\r\n        setValidComm(validateComm(['UFR', 'RUB', 'BUL'], e.target.value));\r\n    }\r\n\r\n    console.log(performCycle(['UF', 'UB', 'UL']));\r\n    //console.log(validateComm(['UFR', 'RUB', 'BUL'], \"[U R : [U2, R D R']]\"));\r\n\r\n    return (\r\n        <>\r\n            <h1>cube.js test</h1>\r\n            <input type=\"text\" onChange={handleChange} value={moves}></input>\r\n            <p>{validComm?'valid comm :)':'invalid comm :('}</p>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Train = () => {\r\n    return (\r\n        <>\r\n            <h1 className='m-4'>\r\n                What do you want yo train?\r\n            </h1>\r\n            <Link to=\"/train/edge_comms\">\r\n                <button className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Edge comms\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/train/corner_comms\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-2\">\r\n                    <i className=\"fa fa-brain\"></i> Corner comms\r\n                </button>\r\n            </Link>\r\n            <button type=\"button\" className=\"btn btn-primary btn-lg m-2\" disabled>\r\n                <i className=\"fa fa-brain\"></i> Coming soon...\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { CommsConfig } from '../components/CommsConfig';\r\n\r\n  import { CommsTrainer } from '../components/CommsTrainer';\r\nimport { Config } from '../components/Config';\r\nimport { CubeLayout } from '../components/CubeLayout';\r\nimport { ExportConfig } from '../components/ExportConfig';\r\nimport { Home } from '../components/Home';\r\nimport { ImportConfig } from '../components/ImportConfig';\r\nimport { Sidebar } from '../components/Sidebar';\r\nimport { Test } from '../components/Test';\r\nimport { Train } from '../components/Train';\r\n\r\nexport const AppRouter = () => {\r\n  \r\n    return (\r\n        <Router>\r\n            <div className=\"d-flex\">\r\n                <Sidebar />\r\n\r\n                <div className=\"main-div\">\r\n                    <Switch>\r\n                        <Route path=\"/train/edge_comms\">\r\n                            <CommsTrainer pieceType={'edge'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/train/corner_comms\">\r\n                            <CommsTrainer pieceType={'corner'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/train\">\r\n                            <Train />\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/config/letter_scheme\">\r\n                            <CubeLayout />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/edge_comms\">\r\n                            <CommsConfig pieceType={'edge'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/corner_comms\">\r\n                            <CommsConfig pieceType={'corner'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/export_config\">\r\n                            <ExportConfig />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config/import_config\">\r\n                            <ImportConfig />\r\n                        </Route>\r\n\r\n                        <Route path=\"/config\">\r\n                            <Config />\r\n                        </Route>\r\n\r\n                        <Route path=\"/test\">\r\n                            <Test />\r\n                        </Route>\r\n\r\n                        <Route path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        \r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport './App.css';\nimport './styles/general.css';\n//import { CubeLayout } from './components/CubeLayout';\nimport { AppRouter } from './routers/AppRouter';\n\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n//import { Sidebar } from './components/Sidebar';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}